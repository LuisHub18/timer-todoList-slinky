[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\holal\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\holal\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.4 (Eclipse Adoptium Java 11.0.17)
[debug]       Load.loadUnit: plugins took 190.2776ms
[debug]       Load.loadUnit: defsScala took 0.7845ms
[debug] [Loading] Scanning directory C:\Users\holal\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\holal\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 27.9453 ms
[debug]           Load.resolveProject(global-plugins) took 64.1878ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\holal\.sbt\1.0\plugins, plugins: List(<none>))) took 139.1509ms
[debug] [Loading] Done in C:\Users\holal\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 177.0826ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4487ms
[debug]     Load.loadUnit(file:/C:/Users/holal/.sbt/1.0/plugins/, ...) took 386.6964ms
[debug]   Load.apply: load took 621.804ms
[debug]   Load.apply: resolveProjects took 13.6387ms
[debug]   Load.apply: finalTransforms took 102.7581ms
[debug]   Load.apply: config.delegates took 16.6093ms
[debug]   Load.apply: Def.make(settings)... took 803.1575ms
[debug]   Load.apply: structureIndex took 218.9375ms
[debug]   Load.apply: mkStreams took 3.421ms
[info] loading global plugins from C:\Users\holal\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5617.6886ms
[debug]           Load.loadUnit: plugins took 107.8785ms
[debug]           Load.loadUnit: defsScala took 0.0206ms
[debug] [Loading] Scanning directory C:\coding\tutorial\project
[debug]             Load.loadUnit: mkEval took 16.614ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\coding\tutorial\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.9902 ms
[info] loading settings for project tutorial-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(tutorial-build) took 8.0902ms
[debug]             Load.loadTransitive: finalizeProject(Project(id tutorial-build, base: C:\coding\tutorial\project, plugins: List(<none>))) took 13.2986ms
[debug] [Loading] Done in C:\coding\tutorial\project, returning: (tutorial-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4869.2283ms
[debug]           Load.loadUnit: cleanEvalClasses took 10.9615ms
[debug]         Load.loadUnit(file:/C:/coding/tutorial/project/, ...) took 4990.1213ms
[debug]       Load.apply: load took 4993.8015ms
[debug]       Load.apply: resolveProjects took 0.2189ms
[debug]       Load.apply: finalTransforms took 35.2952ms
[debug]       Load.apply: config.delegates took 0.9952ms
[debug]       Load.apply: Def.make(settings)... took 153.7943ms
[debug]       Load.apply: structureIndex took 44.2598ms
[debug]       Load.apply: mkStreams took 0.0034ms
[info] loading project definition from C:\coding\tutorial\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 8642.2169ms
[debug]     Load.loadUnit: defsScala took 0.0089ms
[debug] [Loading] Scanning directory C:\coding\tutorial
[debug]       Load.loadUnit: mkEval took 0.8646ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\coding\tutorial, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(scalajsbundler.sbtplugin.ScalaJSBundlerPlugin), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.scalajs.sbtplugin.ScalaJSJUnitPlugin),Set(Atom(org.scalajs.sbtplugin.ScalaJSPlugin)))
[debug] Clause(Atom(org.scalajs.sbtplugin.ScalaJSPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(scalajsbundler.sbtplugin.ScalaJSBundlerPlugin),Set(Atom(org.scalajs.sbtplugin.ScalaJSPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,scalajsbundler.sbtplugin.ScalaJSBundlerPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,org.scalajs.sbtplugin.ScalaJSPlugin,sbt.plugins.JvmPlugin,org.portablescala.sbtplatformdeps.PlatformDepsPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 5.1674 ms
[info] loading settings for project tutorial from build.sbt ...
[debug]         Load.resolveProject(tutorial) took 281.3883ms
[debug]       Load.loadTransitive: finalizeProject(Project(id tutorial, base: C:\coding\tutorial, plugins: List(<none>))) took 289.8209ms
[debug] [Loading] Done in C:\coding\tutorial, returning: (tutorial)
[debug]     Load.loadUnit: loadedProjectsRaw took 10816.3059ms
[debug]     Load.loadUnit: cleanEvalClasses took 251.6444ms
[debug]   Load.loadUnit(file:/C:/coding/tutorial/, ...) took 19711.7703ms
[debug] Load.apply: load took 19715.9171ms
[debug] Load.apply: resolveProjects took 0.4472ms
[debug] Load.apply: finalTransforms took 104.4482ms
[debug] Load.apply: config.delegates took 0.6465ms
[debug] Load.apply: Def.make(settings)... took 307.3932ms
[debug] Load.apply: structureIndex took 72.3253ms
[debug] Load.apply: mkStreams took 0.0086ms
[info] set current project to tutorial (in build file:/C:/coding/tutorial/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 63788 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 63788, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to tutorial (in build file:/C:/coding/tutorial/)
[debug] > Exec(idea-shell, None, None)
